---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

// Get all projects from the local content folder
const projects = await getCollection('projects');

// Enhanced debug logging with focus on extracted content
console.log('=== DEBUG PROJECTS PAGE - EXTRACTED CONTENT CHECK ===');
console.log('Total projects found:', projects.length);

// Check each project for extracted content
const projectsWithExtractedContent = projects.map(project => {
  const hasShortDescription = !!project.data.shortDescription;
  const hasLongDescription = !!project.data.longDescription;
  const hasLessonsLearned = !!project.data.lessonsLearned;
  const shortDescriptionLength = project.data.shortDescription?.length || 0;
  const longDescriptionLength = project.data.longDescription?.length || 0;
  const lessonsLearnedLength = project.data.lessonsLearned?.length || 0;
  
  console.log(`Project: ${project.slug}`);
  console.log(`  - Has shortDescription: ${hasShortDescription} (${shortDescriptionLength} chars)`);
  console.log(`  - Has longDescription: ${hasLongDescription} (${longDescriptionLength} chars)`);
  console.log(`  - Has lessonsLearned: ${hasLessonsLearned} (${lessonsLearnedLength} chars)`);
  console.log(`  - shortDescription preview: ${project.data.shortDescription?.substring(0, 100)}...`);
  console.log(`  - longDescription preview: ${project.data.longDescription?.substring(0, 100)}...`);
  console.log(`  - lessonsLearned preview: ${project.data.lessonsLearned?.substring(0, 100)}...`);
  
  return {
    slug: project.slug,
    data: project.data,
    hasShortDescription,
    hasLongDescription,
    hasLessonsLearned,
    shortDescriptionLength,
    longDescriptionLength,
    lessonsLearnedLength,
    shortDescriptionPreview: project.data.shortDescription?.substring(0, 200) || 'NOT FOUND',
    longDescriptionPreview: project.data.longDescription?.substring(0, 200) || 'NOT FOUND',
    lessonsLearnedPreview: project.data.lessonsLearned?.substring(0, 200) || 'NOT FOUND'
  };
});

// Summary statistics
const projectsWithShortDesc = projectsWithExtractedContent.filter(p => p.hasShortDescription).length;
const projectsWithLongDesc = projectsWithExtractedContent.filter(p => p.hasLongDescription).length;
const projectsWithLessons = projectsWithExtractedContent.filter(p => p.hasLessonsLearned).length;

console.log('=== EXTRACTION SUMMARY ===');
console.log(`Projects with shortDescription: ${projectsWithShortDesc}/${projects.length}`);
console.log(`Projects with longDescription: ${projectsWithLongDesc}/${projects.length}`);
console.log(`Projects with lessonsLearned: ${projectsWithLessons}/${projects.length}`);
console.log('=== END DEBUG ===');
---

<Layout title="Debug Projects - Extracted Content">
  <main class="container mx-auto px-4 py-8 max-w-6xl">
    <header class="mb-12 text-center">
      <h1 class="text-5xl font-bold mb-4">Debug Projects Collection</h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Checking extracted section content from project markdown files
      </p>
    </header>

    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
      <h2 class="text-2xl font-semibold mb-4">Extraction Summary</h2>
      
      <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
        <div class="bg-blue-50 p-4 rounded border border-blue-200">
          <h3 class="font-semibold text-blue-700">Total Projects</h3>
          <p class="text-2xl font-bold text-blue-600">{projects.length}</p>
        </div>
        
        <div class="bg-green-50 p-4 rounded border border-green-200">
          <h3 class="font-semibold text-green-700">With Short Description</h3>
          <p class="text-2xl font-bold text-green-600">{projectsWithShortDesc}/{projects.length}</p>
          <p class="text-sm text-green-600">{Math.round((projectsWithShortDesc/projects.length)*100)}%</p>
        </div>
        
        <div class="bg-purple-50 p-4 rounded border border-purple-200">
          <h3 class="font-semibold text-purple-700">With Long Description</h3>
          <p class="text-2xl font-bold text-purple-600">{projectsWithLongDesc}/{projects.length}</p>
          <p class="text-sm text-purple-600">{Math.round((projectsWithLongDesc/projects.length)*100)}%</p>
        </div>
        
        <div class="bg-orange-50 p-4 rounded border border-orange-200">
          <h3 class="font-semibold text-orange-700">With Lessons Learned</h3>
          <p class="text-2xl font-bold text-orange-600">{projectsWithLessons}/{projects.length}</p>
          <p class="text-sm text-orange-600">{Math.round((projectsWithLessons/projects.length)*100)}%</p>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-md p-6">
      <h2 class="text-2xl font-semibold mb-4">Individual Project Analysis</h2>
      
      <div class="space-y-6">
        {projectsWithExtractedContent.map((project) => (
          <div class="border border-gray-200 rounded-lg p-4">
            <h3 class="text-lg font-semibold mb-3 text-gray-800">{project.slug}</h3>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
              <div class={`p-3 rounded ${project.hasShortDescription ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>
                <h4 class="font-semibold text-sm mb-2">
                  Short Description 
                  <span class={`ml-2 px-2 py-1 rounded text-xs ${project.hasShortDescription ? 'bg-green-200 text-green-800' : 'bg-red-200 text-red-800'}`}>
                    {project.hasShortDescription ? '✓ FOUND' : '✗ MISSING'}
                  </span>
                </h4>
                <p class="text-xs text-gray-600 mb-2">Length: {project.shortDescriptionLength} characters</p>
                <div class="bg-white p-2 rounded text-sm max-h-32 overflow-y-auto">
                  <pre class="whitespace-pre-wrap text-xs">{project.shortDescriptionPreview}</pre>
                </div>
              </div>
              
              <div class={`p-3 rounded ${project.hasLongDescription ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>
                <h4 class="font-semibold text-sm mb-2">
                  Long Description
                  <span class={`ml-2 px-2 py-1 rounded text-xs ${project.hasLongDescription ? 'bg-green-200 text-green-800' : 'bg-red-200 text-red-800'}`}>
                    {project.hasLongDescription ? '✓ FOUND' : '✗ MISSING'}
                  </span>
                </h4>
                <p class="text-xs text-gray-600 mb-2">Length: {project.longDescriptionLength} characters</p>
                <div class="bg-white p-2 rounded text-sm max-h-32 overflow-y-auto">
                  <pre class="whitespace-pre-wrap text-xs">{project.longDescriptionPreview}</pre>
                </div>
              </div>
              
              <div class={`p-3 rounded ${project.hasLessonsLearned ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>
                <h4 class="font-semibold text-sm mb-2">
                  Lessons Learned
                  <span class={`ml-2 px-2 py-1 rounded text-xs ${project.hasLessonsLearned ? 'bg-green-200 text-green-800' : 'bg-red-200 text-red-800'}`}>
                    {project.hasLessonsLearned ? '✓ FOUND' : '✗ MISSING'}
                  </span>
                </h4>
                <p class="text-xs text-gray-600 mb-2">Length: {project.lessonsLearnedLength} characters</p>
                <div class="bg-white p-2 rounded text-sm max-h-32 overflow-y-auto">
                  <pre class="whitespace-pre-wrap text-xs">{project.lessonsLearnedPreview}</pre>
                </div>
              </div>
            </div>
            
            <details class="mt-4">
              <summary class="cursor-pointer text-sm font-medium text-gray-600 hover:text-gray-800">
                Show Full Frontmatter Data
              </summary>
              <div class="mt-2 bg-gray-50 p-3 rounded">
                <pre class="text-xs overflow-x-auto"><code>{JSON.stringify(project.data, null, 2)}</code></pre>
              </div>
            </details>
          </div>
        ))}
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-md p-6 mt-8">
      <h2 class="text-2xl font-semibold mb-4">Raw Collection Data</h2>
      <div class="bg-gray-50 p-4 rounded max-h-96 overflow-y-auto">
        <pre class="text-xs overflow-x-auto"><code>{JSON.stringify(projectsWithExtractedContent.map(p => ({
          slug: p.slug,
          hasShortDescription: p.hasShortDescription,
          hasLongDescription: p.hasLongDescription,
          hasLessonsLearned: p.hasLessonsLearned,
          shortDescriptionLength: p.shortDescriptionLength,
          longDescriptionLength: p.longDescriptionLength,
          lessonsLearnedLength: p.lessonsLearnedLength
        })), null, 2)}</code></pre>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Client-side logging for additional debugging
  console.log('=== CLIENT-SIDE PROJECTS DEBUG ===');
  console.log('Page loaded, check server-side logs above for extraction analysis');
  console.log('=== END CLIENT-SIDE DEBUG ===');
</script> 