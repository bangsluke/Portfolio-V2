---
import { Icon } from 'astro-icon/components';
import { getCollection } from 'astro:content';
import {
	getPortfolioConfigValue,
	processObsidianLink,
} from '../../utils/content-processor';
import Heading from '../ui/Heading.astro';
import ProjectCard from './ProjectCard.astro';

// Get all projects, companies, and clients from the local content folders
const projects = await getCollection('projects');
const companies = await getCollection('companies');
const clients = await getCollection('clients');

// Get portfolio configuration with fallback
let maxProjectsDisplay = 6;
try {
	maxProjectsDisplay =
		(await getPortfolioConfigValue('maxProjectsDisplay', 6)) || 6;
} catch (error) {
	console.error('Error getting portfolio config:', error);
	maxProjectsDisplay = 6; // Fallback to default
}

// Sort projects by portfolioOrder first, then dateStart, then alphabetically
const sortedProjects = projects.sort((a, b) => {
	// Get portfolioOrder values (default to 999 if not set)
	const orderA = a.data.portfolioOrder || 999;
	const orderB = b.data.portfolioOrder || 999;

	// First, sort by portfolioOrder (numerically)
	if (orderA !== orderB) {
		return orderA - orderB;
	}

	// If portfolioOrder is the same, sort by dateStart (chronologically)
	const dateA = a.data.dateStart || new Date(0);
	const dateB = b.data.dateStart || new Date(0);

	const dateAValue =
		dateA instanceof Date ? dateA.getTime() : new Date(dateA).getTime();
	const dateBValue =
		dateB instanceof Date ? dateB.getTime() : new Date(dateB).getTime();

	if (dateAValue !== dateBValue) {
		return dateBValue - dateAValue; // Newest dates first
	}

	// If dates are the same, fallback to alphabetical sorting by slug
	return a.slug.localeCompare(b.slug);
});

// Process projects to include company/client logos
const processedProjects = sortedProjects.map(project => {
	let companyLogoURL = null;

	// If project has linkedCompany, find the company or client and get its logoURL
	if (project.data.linkedCompany && project.data.linkedCompany.length > 0) {
		// Get the first linked company and process Obsidian link format
		const linkedCompanyRaw = project.data.linkedCompany[0];
		const linkedCompanyName = processObsidianLink(linkedCompanyRaw);

		// First try to find in companies collection
		const company = companies.find(company => {
			const companyName = company.id.replace('.md', ''); // Remove .md extension
			return companyName === linkedCompanyName;
		});

		if (company && company.data.logoURL) {
			companyLogoURL = company.data.logoURL;
		} else {
			// If not found in companies, try clients collection
			const client = clients.find(client => {
				const clientName = client.id.replace('.md', ''); // Remove .md extension
				return clientName === linkedCompanyName;
			});

			if (client && client.data.logoURL) {
				companyLogoURL = client.data.logoURL;
			}
		}
	}

	return {
		...project,
		companyLogoURL,
	};
});

// Show projects based on configuration
const displayedProjects = processedProjects.slice(0, maxProjectsDisplay);
---

<section class="py-8 px-8 max-md:py-4 mb-4 scroll-m-16" id="projects">
	<div class="flex flex-col pt-8 max-w-7xl mx-auto">
		<div class="flex gap-4 items-center justify-center">
			<Icon class="text-3xl dark:text-white text-blacktext" name="code" />
			<Heading text="" textGradient="Projects " level={2} />
		</div>

		<div class="relative max-md:mt-0 mt-8" aria-label="Projects">
			<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
				{
					displayedProjects.map(project => (
						<ProjectCard
							name={project.data.name ?? project.id.replace('.md', '')}
							imageURL={project.data.imageURL}
							technologies={project.data.technologies}
							shortDescription={project.data.shortDescription}
							slug={project.slug}
							companyLogoURL={project.companyLogoURL}
							linkedCompany={project.data.linkedCompany}
						/>
					))
				}
			</div>
			{
				sortedProjects.length > maxProjectsDisplay && (
					<div class="flex justify-center mt-12">
						<a
							href="/portfolio/projects"
							class="bg-mint-400 hover:bg-mint-500 text-black font-bold px-8 py-3 rounded-full transition-all duration-300 text-lg">
							See more projects
						</a>
					</div>
				)
			}
		</div>
	</div>
</section>
