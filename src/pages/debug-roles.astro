---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

// Get all roles from the local content folder
const roles = await getCollection('roles');

// Enhanced debug logging with focus on extracted content
console.log('=== DEBUG ROLES PAGE - EXTRACTED CONTENT CHECK ===');
console.log('Total roles found:', roles.length);

// Check each role for extracted content
const rolesWithExtractedContent = roles.map(role => {
  const hasRoleDescription = !!role.data.roleDescription;
  const hasKeyAchievement = !!role.data.keyAchievement;
  const roleDescriptionLength = role.data.roleDescription?.length || 0;
  const keyAchievementLength = role.data.keyAchievement?.length || 0;
  
  console.log(`Role: ${role.slug}`);
  console.log(`  - Has roleDescription: ${hasRoleDescription} (${roleDescriptionLength} chars)`);
  console.log(`  - Has keyAchievement: ${hasKeyAchievement} (${keyAchievementLength} chars)`);
  console.log(`  - roleDescription preview: ${role.data.roleDescription?.substring(0, 100)}...`);
  console.log(`  - keyAchievement preview: ${role.data.keyAchievement?.substring(0, 100)}...`);
  
  return {
    slug: role.slug,
    data: role.data,
    hasRoleDescription,
    hasKeyAchievement,
    roleDescriptionLength,
    keyAchievementLength,
    roleDescriptionPreview: role.data.roleDescription?.substring(0, 200) || 'NOT FOUND',
    keyAchievementPreview: role.data.keyAchievement?.substring(0, 200) || 'NOT FOUND'
  };
});

// Summary statistics
const rolesWithDescription = rolesWithExtractedContent.filter(r => r.hasRoleDescription).length;
const rolesWithAchievement = rolesWithExtractedContent.filter(r => r.hasKeyAchievement).length;

console.log('=== EXTRACTION SUMMARY ===');
console.log(`Roles with roleDescription: ${rolesWithDescription}/${roles.length}`);
console.log(`Roles with keyAchievement: ${rolesWithAchievement}/${roles.length}`);
console.log('=== END DEBUG ===');
---

<Layout title="Debug Roles - Extracted Content">
  <main class="container mx-auto px-4 py-8 max-w-6xl">
    <header class="mb-12 text-center">
      <h1 class="text-5xl font-bold mb-4">Debug Roles Collection</h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Checking extracted section content from markdown files
      </p>
    </header>

    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
      <h2 class="text-2xl font-semibold mb-4">Extraction Summary</h2>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        <div class="bg-blue-50 p-4 rounded border border-blue-200">
          <h3 class="font-semibold text-blue-700">Total Roles</h3>
          <p class="text-2xl font-bold text-blue-600">{roles.length}</p>
        </div>
        
        <div class="bg-green-50 p-4 rounded border border-green-200">
          <h3 class="font-semibold text-green-700">With Role Description</h3>
          <p class="text-2xl font-bold text-green-600">{rolesWithDescription}/{roles.length}</p>
          <p class="text-sm text-green-600">{Math.round((rolesWithDescription/roles.length)*100)}%</p>
        </div>
        
        <div class="bg-purple-50 p-4 rounded border border-purple-200">
          <h3 class="font-semibold text-purple-700">With Key Achievement</h3>
          <p class="text-2xl font-bold text-purple-600">{rolesWithAchievement}/{roles.length}</p>
          <p class="text-sm text-purple-600">{Math.round((rolesWithAchievement/roles.length)*100)}%</p>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-md p-6">
      <h2 class="text-2xl font-semibold mb-4">Individual Role Analysis</h2>
      
      <div class="space-y-6">
        {rolesWithExtractedContent.map((role) => (
          <div class="border border-gray-200 rounded-lg p-4">
            <h3 class="text-lg font-semibold mb-3 text-gray-800">{role.slug}</h3>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div class={`p-3 rounded ${role.hasRoleDescription ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>
                <h4 class="font-semibold text-sm mb-2">
                  Role Description 
                  <span class={`ml-2 px-2 py-1 rounded text-xs ${role.hasRoleDescription ? 'bg-green-200 text-green-800' : 'bg-red-200 text-red-800'}`}>
                    {role.hasRoleDescription ? '✓ FOUND' : '✗ MISSING'}
                  </span>
                </h4>
                <p class="text-xs text-gray-600 mb-2">Length: {role.roleDescriptionLength} characters</p>
                <div class="bg-white p-2 rounded text-sm max-h-32 overflow-y-auto">
                  <pre class="whitespace-pre-wrap text-xs">{role.roleDescriptionPreview}</pre>
                </div>
              </div>
              
              <div class={`p-3 rounded ${role.hasKeyAchievement ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>
                <h4 class="font-semibold text-sm mb-2">
                  Key Achievement
                  <span class={`ml-2 px-2 py-1 rounded text-xs ${role.hasKeyAchievement ? 'bg-green-200 text-green-800' : 'bg-red-200 text-red-800'}`}>
                    {role.hasKeyAchievement ? '✓ FOUND' : '✗ MISSING'}
                  </span>
                </h4>
                <p class="text-xs text-gray-600 mb-2">Length: {role.keyAchievementLength} characters</p>
                <div class="bg-white p-2 rounded text-sm max-h-32 overflow-y-auto">
                  <pre class="whitespace-pre-wrap text-xs">{role.keyAchievementPreview}</pre>
                </div>
              </div>
            </div>
            
            <details class="mt-4">
              <summary class="cursor-pointer text-sm font-medium text-gray-600 hover:text-gray-800">
                Show Full Frontmatter Data
              </summary>
              <div class="mt-2 bg-gray-50 p-3 rounded">
                <pre class="text-xs overflow-x-auto"><code>{JSON.stringify(role.data, null, 2)}</code></pre>
              </div>
            </details>
          </div>
        ))}
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-md p-6 mt-8">
      <h2 class="text-2xl font-semibold mb-4">Raw Collection Data</h2>
      <div class="bg-gray-50 p-4 rounded max-h-96 overflow-y-auto">
        <pre class="text-xs overflow-x-auto"><code>{JSON.stringify(rolesWithExtractedContent.map(r => ({
          slug: r.slug,
          hasRoleDescription: r.hasRoleDescription,
          hasKeyAchievement: r.hasKeyAchievement,
          roleDescriptionLength: r.roleDescriptionLength,
          keyAchievementLength: r.keyAchievementLength
        })), null, 2)}</code></pre>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Client-side logging for additional debugging
  console.log('=== CLIENT-SIDE ROLES DEBUG ===');
  console.log('Page loaded, check server-side logs above for extraction analysis');
  console.log('=== END CLIENT-SIDE DEBUG ===');
</script> 