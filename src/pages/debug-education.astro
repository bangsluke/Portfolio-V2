---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

// Get all educations from the local content folder
const educations = await getCollection('educations');

// Enhanced debug logging with focus on extracted content
console.log('=== DEBUG EDUCATION PAGE - EXTRACTED CONTENT CHECK ===');
console.log('Total educations found:', educations.length);

// Check each education for extracted content
const educationsWithExtractedContent = educations.map(education => {
  const hasQualifications = !!education.data.qualifications;
  const hasAdditionalDetails = !!education.data.additionalDetails;
  const qualificationsLength = education.data.qualifications?.length || 0;
  const additionalDetailsLength = education.data.additionalDetails?.length || 0;
  
  console.log(`Education: ${education.slug}`);
  console.log(`  - Has qualifications: ${hasQualifications} (${qualificationsLength} chars)`);
  console.log(`  - Has additionalDetails: ${hasAdditionalDetails} (${additionalDetailsLength} chars)`);
  console.log(`  - qualifications preview: ${education.data.qualifications?.substring(0, 100)}...`);
  console.log(`  - additionalDetails preview: ${education.data.additionalDetails?.substring(0, 100)}...`);
  
  return {
    slug: education.slug,
    data: education.data,
    hasQualifications,
    hasAdditionalDetails,
    qualificationsLength,
    additionalDetailsLength,
    qualificationsPreview: education.data.qualifications?.substring(0, 200) || 'NOT FOUND',
    additionalDetailsPreview: education.data.additionalDetails?.substring(0, 200) || 'NOT FOUND'
  };
});

// Summary statistics
const educationsWithQualifications = educationsWithExtractedContent.filter(e => e.hasQualifications).length;
const educationsWithAdditionalDetails = educationsWithExtractedContent.filter(e => e.hasAdditionalDetails).length;

console.log('=== EXTRACTION SUMMARY ===');
console.log(`Educations with qualifications: ${educationsWithQualifications}/${educations.length}`);
console.log(`Educations with additionalDetails: ${educationsWithAdditionalDetails}/${educations.length}`);
console.log('=== END DEBUG ===');
---

<Layout title="Debug Education - Extracted Content">
  <main class="container mx-auto px-4 py-8 max-w-6xl">
    <header class="mb-12 text-center">
      <h1 class="text-5xl font-bold mb-4">Debug Education Collection</h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Checking extracted section content from education markdown files
      </p>
    </header>

    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
      <h2 class="text-2xl font-semibold mb-4">Extraction Summary</h2>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        <div class="bg-blue-50 p-4 rounded border border-blue-200">
          <h3 class="font-semibold text-blue-700">Total Educations</h3>
          <p class="text-2xl font-bold text-blue-600">{educations.length}</p>
        </div>
        
        <div class="bg-green-50 p-4 rounded border border-green-200">
          <h3 class="font-semibold text-green-700">With Qualifications</h3>
          <p class="text-2xl font-bold text-green-600">{educationsWithQualifications}/{educations.length}</p>
          <p class="text-sm text-green-600">{Math.round((educationsWithQualifications/educations.length)*100)}%</p>
        </div>
        
        <div class="bg-purple-50 p-4 rounded border border-purple-200">
          <h3 class="font-semibold text-purple-700">With Additional Details</h3>
          <p class="text-2xl font-bold text-purple-600">{educationsWithAdditionalDetails}/{educations.length}</p>
          <p class="text-sm text-purple-600">{Math.round((educationsWithAdditionalDetails/educations.length)*100)}%</p>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-md p-6">
      <h2 class="text-2xl font-semibold mb-4">Individual Education Analysis</h2>
      
      <div class="space-y-6">
        {educationsWithExtractedContent.map((education) => (
          <div class="border border-gray-200 rounded-lg p-4">
            <h3 class="text-lg font-semibold mb-3 text-gray-800">{education.slug}</h3>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div class={`p-3 rounded ${education.hasQualifications ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>
                <h4 class="font-semibold text-sm mb-2">
                  Qualifications 
                  <span class={`ml-2 px-2 py-1 rounded text-xs ${education.hasQualifications ? 'bg-green-200 text-green-800' : 'bg-red-200 text-red-800'}`}>
                    {education.hasQualifications ? '✓ FOUND' : '✗ MISSING'}
                  </span>
                </h4>
                <p class="text-xs text-gray-600 mb-2">Length: {education.qualificationsLength} characters</p>
                <div class="bg-white p-2 rounded text-sm max-h-32 overflow-y-auto">
                  <pre class="whitespace-pre-wrap text-xs">{education.qualificationsPreview}</pre>
                </div>
              </div>
              
              <div class={`p-3 rounded ${education.hasAdditionalDetails ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>
                <h4 class="font-semibold text-sm mb-2">
                  Additional Details
                  <span class={`ml-2 px-2 py-1 rounded text-xs ${education.hasAdditionalDetails ? 'bg-green-200 text-green-800' : 'bg-red-200 text-red-800'}`}>
                    {education.hasAdditionalDetails ? '✓ FOUND' : '✗ MISSING'}
                  </span>
                </h4>
                <p class="text-xs text-gray-600 mb-2">Length: {education.additionalDetailsLength} characters</p>
                <div class="bg-white p-2 rounded text-sm max-h-32 overflow-y-auto">
                  <pre class="whitespace-pre-wrap text-xs">{education.additionalDetailsPreview}</pre>
                </div>
              </div>
            </div>
            
            <details class="mt-4">
              <summary class="cursor-pointer text-sm font-medium text-gray-600 hover:text-gray-800">
                Show Full Frontmatter Data
              </summary>
              <div class="mt-2 bg-gray-50 p-3 rounded">
                <pre class="text-xs overflow-x-auto"><code>{JSON.stringify(education.data, null, 2)}</code></pre>
              </div>
            </details>
          </div>
        ))}
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-md p-6 mt-8">
      <h2 class="text-2xl font-semibold mb-4">Raw Collection Data</h2>
      <div class="bg-gray-50 p-4 rounded max-h-96 overflow-y-auto">
        <pre class="text-xs overflow-x-auto"><code>{JSON.stringify(educationsWithExtractedContent.map(e => ({
          slug: e.slug,
          hasQualifications: e.hasQualifications,
          hasAdditionalDetails: e.hasAdditionalDetails,
          qualificationsLength: e.qualificationsLength,
          additionalDetailsLength: e.additionalDetailsLength
        })), null, 2)}</code></pre>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Client-side logging for additional debugging
  console.log('=== CLIENT-SIDE EDUCATION DEBUG ===');
  console.log('Page loaded, check server-side logs above for extraction analysis');
  console.log('=== END CLIENT-SIDE DEBUG ===');
</script> 