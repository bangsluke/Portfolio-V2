---
import { getCollection } from 'astro:content';
import CustomerAndClientCarouselItem from '../../../components/portfolio/CustomerAndClientCarouselItem.astro';
import SkillPill from '../../../components/ui/SkillPill.astro';
import Layout from '../../../layouts/Layout.astro';
import { processObsidianLink } from '../../../utils/content-processor';

export async function getStaticPaths() {
	const projects = await getCollection('projects');
	return projects.map(project => ({
		params: { slug: project.slug },
		props: { project },
	}));
}

const { project } = Astro.props;
const { data } = project;

// Get linked companies and clients
let linkedCompanies: any[] = [];
let linkedClients: any[] = [];

try {
	const companies = await getCollection('companies');
	const clients = await getCollection('clients');

	// Check each linked company/client
	data.linkedCompany.forEach(linkedItem => {
		const linkedName = processObsidianLink(linkedItem);

		// First try to find in companies
		const company = companies.find(
			company => company.id.replace('.md', '') === linkedName
		);

		if (company) {
			linkedCompanies.push(company);
		} else {
			// If not found in companies, try clients
			const client = clients.find(
				client => client.id.replace('.md', '') === linkedName
			);

			if (client) {
				linkedClients.push(client);
			}
		}
	});
} catch (error) {
	console.error('Error fetching linked companies/clients:', error);
}

const pageTitle = data.name + ' Project - bangsluke Portfolio';
const description = data.shortDescription;
const ogimage = {
	url: '/images/imagedefault.webp',
	alt: data.name + ' Project - bangsluke Portfolio',
};
---

<Layout pageTitle={pageTitle} description={description} ogimage={ogimage}>
	<div class="min-h-screen">
		<!-- Top Back Button -->
		<div class="mb-8">
			<a
				href="/site#projects"
				class="inline-flex items-center text-mint-400 hover:text-mint-300 transition-colors">
				<svg
					class="w-5 h-5 mr-2"
					fill="none"
					stroke="currentColor"
					viewBox="0 0 24 24">
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M15 19l-7-7 7-7"></path>
				</svg>
				Back to Projects
			</a>
		</div>

		<!-- Project Image (90vw centered) -->
		<div class="flex justify-center mb-8">
			<img
				src={data.imageURL || '/images/imagedefault.webp'}
				alt={data.name}
				class="w-[90vw] max-w-4xl h-96 object-cover object-center rounded-2xl shadow-2xl"
			/>
		</div>

		<!-- Project Name and Technologies -->
		<div class="text-center mb-12">
			<h1 class="text-5xl font-bold mb-6 text-mint-100">{data.name}</h1>
			<div class="flex flex-wrap justify-center gap-3">
				{
					data.technologies &&
						data.technologies.map((tech: string) => {
							const cleanTech = tech.replace(/\[|\]/g, '');
							return (
								<SkillPill
									skillName={cleanTech}
									variant="dark"
									size="md"
									className="shadow-lg"
								/>
							);
						})
				}
			</div>
		</div>

		<!-- Description Section -->
		{
			data.longDescription && (
				<section class="mb-12">
					<h2 class="text-3xl font-bold mb-6 text-mint-100">Description</h2>
					<div class="bg-gradient-to-br from-[#1a232a] to-[#10151a] rounded-2xl p-8 shadow-lg">
						<div class="text-lg text-zinc-200 leading-relaxed whitespace-pre-line">
							{data.longDescription}
						</div>
					</div>
				</section>
			)
		}

		<!-- Lessons Learned Section -->
		{
			data.lessonsLearned && (
				<section class="mb-12">
					<h2 class="text-3xl font-bold mb-6 text-mint-100">Lessons Learned</h2>
					<div class="bg-gradient-to-br from-[#1a232a] to-[#10151a] rounded-2xl p-8 shadow-lg">
						<div class="text-lg text-zinc-200 leading-relaxed whitespace-pre-line">
							{data.lessonsLearned}
						</div>
					</div>
				</section>
			)
		}

		<!-- Linked Company/Client Section -->
		{
			(linkedCompanies.length > 0 || linkedClients.length > 0) && (
				<section class="mb-12">
					<h2 class="text-3xl font-bold mb-6 text-mint-100">Developed For</h2>
					<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
						{linkedCompanies.map(company => (
							<CustomerAndClientCarouselItem
								name={company.slug}
								logoURL={company.data.logoURL || undefined}
								dateStart={company.data.dateStart}
								dateEnd={company.data.dateEnd}
								description={company.data.companyDescription}
								keyAchievement={company.data.keyAchievement}
								type="company"
							/>
						))}
						{linkedClients.map(client => (
							<CustomerAndClientCarouselItem
								name={client.data.name || client.slug}
								logoURL={client.data.logoURL || undefined}
								dateStart={client.data.dateStart}
								dateEnd={client.data.dateEnd}
								description={client.data.clientDescription}
								keyAchievement={client.data.keyAchievement}
								type="client"
							/>
						))}
					</div>
				</section>
			)
		}

		<!-- Project Links -->
		{
			(data.projectURL || data.codeURL) && (
				<section class="mb-12">
					<h2 class="text-3xl font-bold mb-6 text-mint-100">Project Links</h2>
					<div class="flex flex-wrap gap-4 justify-center">
						{data.projectURL && (
							<a
								href={data.projectURL}
								target="_blank"
								rel="noopener noreferrer"
								class="bg-mint-400 hover:bg-mint-500 text-black font-bold px-8 py-3 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg">
								Visit Site
							</a>
						)}
						{data.codeURL && (
							<a
								href={data.codeURL}
								target="_blank"
								rel="noopener noreferrer"
								class="bg-[#232b32] hover:bg-mint-700/30 text-mint-100 font-bold px-8 py-3 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg">
								View Code
							</a>
						)}
					</div>
				</section>
			)
		}

		<!-- Bottom Back Button -->
		<div class="text-center mt-12">
			<a
				href="/site#projects"
				class="inline-flex items-center text-mint-400 hover:text-mint-300 transition-colors">
				<svg
					class="w-5 h-5 mr-2"
					fill="none"
					stroke="currentColor"
					viewBox="0 0 24 24">
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M15 19l-7-7 7-7"></path>
				</svg>
				Back to Projects
			</a>
		</div>
	</div>
</Layout>
