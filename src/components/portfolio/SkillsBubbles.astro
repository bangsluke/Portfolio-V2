---
import { Icon } from 'astro-icon/components';
import { getCollection } from 'astro:content';
import { getSkillIconName, shouldShowIcon } from '../../utils/icon-utils';

// Get all skills from the local content folder
const skills = await getCollection('skills');

// Sort skills by skillRating (highest first), then alphabetically
const sortedSkills = skills.sort((a, b) => {
	// Sort by skillRating (highest first)
	const ratingA = a.data.skillRating || 0;
	const ratingB = b.data.skillRating || 0;

	if (ratingA !== ratingB) {
		return ratingB - ratingA;
	}

	// Fallback to alphabetical sorting by slug (filename)
	return a.slug.localeCompare(b.slug);
});
---

<section class="py-8 px-8 max-md:py-4 mb-4 scroll-m-16" id="skills">
	<div class="overflow-y-auto max-h-96">
		<div
			class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-6">
			{
				sortedSkills.map(skill => {
					const skillName = skill.data.name || skill.id.replace('.md', '');
					const iconName = getSkillIconName(skill.data.logoFileName || null);
					const hasValidIcon = iconName && shouldShowIcon(iconName);

					return (
						<div class="group/skill relative cursor-pointer">
							{/* Skill Bubble */}
							<div class="relative w-24 h-24 mx-auto rounded-full overflow-hidden bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-900 border-2 border-gray-300 dark:border-gray-600 hover:border-mint-400 dark:hover:border-mint-400 transition-all duration-300 hover:scale-105 shadow-lg hover:shadow-xl">
								{/* Background Icon/Logo */}
								{hasValidIcon ? (
									<div class="absolute inset-0 flex items-center justify-center opacity-20 group-hover/skill:opacity-30 transition-opacity duration-300">
										<Icon
											name={iconName}
											class="w-16 h-16 text-gray-600 dark:text-gray-400"
										/>
									</div>
								) : skill.data.logoFileName ? (
									<div class="absolute inset-0 flex items-center justify-center opacity-20 group-hover/skill:opacity-30 transition-opacity duration-300">
										<div class="w-16 h-16 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center text-gray-500 dark:text-gray-400 text-2xl">
											?
										</div>
									</div>
								) : (
									<div class="absolute inset-0 flex items-center justify-center opacity-20 group-hover/skill:opacity-30 transition-opacity duration-300">
										<div class="w-16 h-16 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center text-gray-500 dark:text-gray-400 text-2xl">
											ðŸ’»
										</div>
									</div>
								)}

								{/* Skill Name Overlay */}
								<div class="absolute inset-0 flex items-center justify-center">
									<div class="text-center px-2">
										<h3 class="text-sm font-medium text-gray-700 dark:text-gray-200 group-hover/skill:text-mint-400 dark:group-hover/skill:text-mint-400 transition-colors duration-300 leading-tight">
											{skillName}
										</h3>
									</div>
								</div>
							</div>

							{/* Tooltip with description */}
							{skill.data.skillDescription && (
								<div class="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 text-xs rounded-lg opacity-0 group-hover/skill:opacity-100 transition-opacity duration-300 pointer-events-none whitespace-nowrap z-10 shadow-lg">
									{skillName}
									<div class="absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900 dark:border-t-gray-100" />
								</div>
							)}
						</div>
					);
				})
			}
		</div>
	</div>
</section>
