// This file is processed at build time to generate the known icons list
// The actual icon list is generated by a build script or Astro's build process

// Fallback list of known icons (will be replaced at build time)
let knownIconsCache: string[] = [
	'CPlusPlus',
	'algolia',
	'angular',
	'apollo',
	'apple_shortcuts',
	'arrow-left',
	'astro',
	'azure',
	'azure_devops',
	'bars',
	'bash',
	'bitwarden',
	'bootstrap',
	'briefcase',
	'cloudflare',
	'code',
	'codeium',
	'copilot',
	'css',
	'cursor',
	'cursor-ia',
	'dashboard',
	'deepseek',
	'docker',
	'envelope',
	'eslint',
	'excel',
	'facebook',
	'figma',
	'firebase',
	'flask',
	'gatsby',
	'git',
	'github',
	'github-svg',
	'gitlab',
	'google_cloud',
	'graphql',
	'heroku',
	'html',
	'info',
	'instagram',
	'java',
	'javascript',
	'json',
	'linkedin',
	'logo',
	'markdown',
	'md',
	'mongo',
	'moon',
	'mysql',
	'nestjs',
	'netlify',
	'nextjs',
	'node',
	'nodejs',
	'npm',
	'paperplane',
	'person',
	'php',
	'pip',
	'powerpoint',
	'python',
	'react',
	'rocket',
	'sass',
	'sun',
	'tailwind',
	'twitter',
	'typescript',
	'vba',
	'vercel',
	'vitejs',
	'vs_code',
	'whatsapp',
	'windsurf-logo',
	'wordpress',
	'xmark',
	'yarn',
	'youtube',
];

/**
 * Gets all known icon names from the src/icons directory
 * @returns Array of icon names (without .svg extension)
 */
export function getKnownIcons(): string[] {
	return knownIconsCache;
}

/**
 * Checks if an icon name is known (exists in the icons directory)
 * @param iconName - The icon name to check (with or without .svg extension)
 * @returns boolean indicating if the icon is known
 */
export function isKnownIcon(iconName: string): boolean {
	if (!iconName) return false;

	// Remove .svg extension if present
	const cleanIconName = iconName.replace(/\.svg$/, '');

	return knownIconsCache.includes(cleanIconName);
}

/**
 * Gets the clean icon name (removes .svg extension)
 * @param logoFileName - The logo file name from frontmatter
 * @returns Clean icon name or null if no logo file name provided
 */
export function getSkillIconName(logoFileName: string | null): string | null {
	if (!logoFileName) return null;
	// Remove .svg extension if present
	return logoFileName.replace(/\.svg$/, '');
}

/**
 * Checks if an icon should be shown (exists and is known)
 * @param iconName - The icon name to check
 * @returns boolean indicating if the icon should be shown
 */
export function shouldShowIcon(iconName: string): boolean {
	return isKnownIcon(iconName);
}

// Build-time function to update the icons list
// This would be called by a build script or Astro plugin
export function updateKnownIcons(icons: string[]) {
	knownIconsCache = icons;
}
