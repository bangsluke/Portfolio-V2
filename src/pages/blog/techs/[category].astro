---
import Layout from "../../../layouts/Layout.astro";
import BlogPost from "../../../components/blog/BlogPost.astro";
import Heading from "../../../components/ui/Heading.astro";
import type { MarkdownInstance } from 'astro';

interface Frontmatter {
  languages: string[];
  title: string;
  pubDate: string;
  tags: string[];
  image: string;
}
export async function getStaticPaths(): Promise<Array<{params: {category: string}, props: {posts: MarkdownInstance<Frontmatter>[]}}>>{
  const allPosts = await import.meta.glob<MarkdownInstance<Frontmatter>>("../posts/*.md", { eager: true });
  const posts = Object.values(allPosts);

  const uniqueTags: string[] = [
    ...new Set(posts.map((post: MarkdownInstance<Frontmatter>) => post.frontmatter.languages).flat()),
  ];

  return uniqueTags.map((category) => {
    const filteredPosts = posts.filter((post: MarkdownInstance<Frontmatter>) =>
      post.frontmatter.languages.includes(category)
    );
    return {
      params: { category },
      props: { posts: filteredPosts },
    };
  });
}

const { category } = Astro.params;
const { posts } = Astro.props;
---

<Layout pageTitle={category} >
  <section class="py-8">
    <div class="flex flex-col gap-8 max-w-4xl mx-auto">
      <Heading text="Posts about" textGradient={category}  />

      {
        posts.map((post) => (
          <BlogPost
            url={post.url}
            title={post.frontmatter.title}
            date={post.frontmatter.pubDate}
            tags={post.frontmatter.tags}
            languages={post.frontmatter.languages}
            image={post.frontmatter.image}
          />
        ))
      }
    </div>
  </section>
</Layout>
