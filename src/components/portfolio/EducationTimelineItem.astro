---
import { processContent } from '../../utils/content-processor';

interface Props {
	name: string;
	tags?: string[];
	dateStart?: string | Date | null;
	dateEnd?: string | Date | null;
	logoURL?: string | null;
	qualifications?: string;
	additionalDetails?: string;
}

const {
	name,
	tags,
	dateStart,
	dateEnd,
	logoURL,
	qualifications,
	additionalDetails,
} = Astro.props;

// Process content to handle Obsidian links and markdown
const processedQualifications = processContent(qualifications || '');
const processedAdditionalDetails = processContent(additionalDetails || '');

// Check if content should be hidden (contains "n/a")
const shouldShowQualifications =
	qualifications && qualifications.trim().toLowerCase() !== 'n/a';
const shouldShowAdditionalDetails =
	additionalDetails && additionalDetails.trim().toLowerCase() !== 'n/a';

// Format dates in "MMM YYYY - MMM YYYY" format
function formatDate(date: string | Date | null | undefined): string {
	if (!date) return '';

	const dateObj = typeof date === 'string' ? new Date(date) : date;
	if (isNaN(dateObj.getTime())) return '';

	return dateObj.toLocaleDateString('en-US', {
		month: 'short',
		year: 'numeric',
	});
}

const formattedDateStart = formatDate(dateStart);
const formattedDateEnd = formatDate(dateEnd);
const dateRange =
	formattedDateStart && formattedDateEnd
		? `${formattedDateStart} - ${formattedDateEnd}`
		: formattedDateStart || formattedDateEnd || '';

// console.log(name);
---

<div
	class="relative mx-12 pb-12 grid md:grid-cols-5 md:gap-10 before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-black/20 dark:before:border-white/15 before:content-['']">
	<div class="pb-12 md:col-span-2">
		<div class="sticky top-0">
			<span
				class="absolute -left-[42px] text-5xl text-theme-400 rounded-full drop-shadow-[0px_0px_8px_rgba(0,255,94,1)]"
				>&bull;</span
			>
			<h3 class="text-xl font-bold text-theme-400">
				{name}
			</h3>
			<time
				datetime={dateStart?.toString()}
				class="text-sm text-zinc-600/80 dark:text-white/80">
				{dateRange}
			</time>
		</div>
	</div>
	<div
		class="flex flex-col gap-2 pb-4 text-zinc-00 dark:text-zinc-300 md:col-span-3">
		{
			shouldShowQualifications && processedQualifications && (
				<h4
					class="text-xl font-semibold text-zinc-600 dark:text-white processed-content"
					set:html={processedQualifications}
				/>
			)
		}
		{
			shouldShowAdditionalDetails && processedAdditionalDetails && (
				<div class="processed-content" set:html={processedAdditionalDetails} />
			)
		}
	</div>
</div>
